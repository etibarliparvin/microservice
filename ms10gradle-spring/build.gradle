import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'com.bmuschko.docker-remote-api' version "$dockerVersion" apply true
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
def hash = 'git rev-parse --short HEAD'.execute().text.trim()
version = "$version.$hash"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

task printVersion {
    doLast {
        println("$jpaVersion")
    }
}

task helloTask() {
    doLast {
        project.getAllprojects().forEach(System.out::println)

        project.getTasks().forEach {
            println it
        }
    }
}

task dockerFile(type: Dockerfile, dependsOn: assemble) {
    destFile.set(project.file('Dockerfile'))
    from "alpine:$alpineVersion"
    runCommand 'apk add --no-cache openjdk11'
    copyFile "build/libs/${project.name}-${project.version}.jar", '/app/'
    workingDir '/app/'
    entryPoint 'java'
    defaultCommand '-jar', "/app/${project.name}-${project.version}.jar"
}

task dockerBuild(type: DockerBuildImage, dependsOn: dockerFile) {
    inputDir.set(file("$projectDir/."))
    images.add("$dockerRepoUrl/${project.name}:$version")
}

task dockerPush(type: DockerPushImage, dependsOn: dockerBuild) {
    images.add("$dockerRepoUrl/${project.name}:$version")
}
